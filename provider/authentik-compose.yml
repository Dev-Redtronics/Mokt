services:
  authentik-postgres:
    container_name: authentik-mokt-postgres
    image: postgres:latest
    restart: no
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-U", "postgres"]
      interval: 30s
      retries: 5
      timeout: 5s
      start_period: 30s
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: authentik
      POSTGRES_USER: postgres
    deploy:
      resources:
        reservations:
          cpus: "0.3"
          memory: 200M
        limits:
          cpus: "0.5"
          memory: 500M
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - authentik

  authentik-redis:
    container_name: authentik-mokt-redis
    image: redis:latest
    restart: no
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 30s
      interval: 30s
      timeout: 5s
      retries: 5
    command: --save 60 1 --loglevel warning
    deploy:
      resources:
        reservations:
          cpus: "0.2"
          memory: 100M
        limits:
          cpus: "0.5"
          memory: 300M
    volumes:
      - redis:/data
    networks:
      - authentik

  authentik-server:
    container_name: authentik-mokt-server
    image: ghcr.io/goauthentik/server:latest
    restart: no
    command: server
    ports:
      - "9000:9000"
    environment:
      AUTHENTIK_POSTGRESQL__USER: "postgres"
      AUTHENTIK_POSTGRESQL__NAME: "authentik"
      AUTHENTIK_POSTGRESQL__PASSWORD: "postgres"
      AUTHENTIK_SECRET_KEY: "pjTkB0QZACGQnp2h30E1MBO24kFYNzY+5znm/PO/wgeSFudOqxD8PBm5uzZ1snrN43rEZYUlCidryQCG"
      AUTHENTIK_REDIS__HOST: "authentik-mokt-redis"
      AUTHENTIK_POSTGRESQL__HOST: "authentik-mokt-postgres"
    volumes:
      - media:/media
      - templates:/templates
    depends_on:
      - authentik-postgres
      - authentik-redis
    networks:
      - authentik

  authentik-worker:
    container_name: authentik-mokt-worker
    image: ghcr.io/goauthentik/server:latest
    restart: no
    command: worker
    environment:
      AUTHENTIK_POSTGRESQL__USER: "postgres"
      AUTHENTIK_POSTGRESQL__NAME: "authentik"
      AUTHENTIK_POSTGRESQL__PASSWORD: "postgres"
      AUTHENTIK_SECRET_KEY: "pjTkB0QZACGQnp2h30E1MBO24kFYNzY+5znm/PO/wgeSFudOqxD8PBm5uzZ1snrN43rEZYUlCidryQCG"
      AUTHENTIK_REDIS__HOST: "authentik-mokt-redis"
      AUTHENTIK_POSTGRESQL__HOST: "authentik-mokt-postgres"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - media:/media
      - templates:/templates
      - certs:/certs
    depends_on:
      - authentik-postgres
      - authentik-redis
    networks:
      - authentik

volumes:
  postgres:
    driver: local
  redis:
    driver: local
  media:
    driver: local
  templates:
    driver: local
  certs:
    driver: local

networks:
  authentik:
    driver: bridge
